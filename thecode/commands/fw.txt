    def enter_bootloader(args); @block << "\x42"; end
    def no_operation(args); @block << "\x5A"; end
    def firmware_version(args); @block << "\x76"; end
    #def setvdd(args); @block << "\xA0"; end
    #def setvpp(args); @block << "\xA1"; end
    def read_status(args); @block << "\xA2"; end
    def read_voltages(args); @block << "\xA3"; end
    #def download_script(args); @block << "\xA4"; end
    #def run_script(args); @block << "\xA5"; end
    #def execute_script(args); @block << "\xa6"; end
    def clr_download_buffer(args); @block << "\xA7"; end
    #def download_data(args); @block << "\xA8"; end
    def clr_upload_buffer(args); @block << "\xA9"; end
    def upload_data(args); @block << "\xAA"; end
    def clr_script_buffer(args); @block << "\xAB"; end
    def upload_data_nolen(args); @block << "\xAC"; end
    def end_of_buffer(args); @block << "\xad"; end
    def reset(args); @block << "\xAE"; end
    def script_buffer_chksm(args); @block << "\xAF"; end
    #def set_voltage_cals(args); @block << "\xB0"; end
    #def wr_internal_ee(args); @block << "\xB1"; end
    #def rd_internal_ee(args); @block << "\xB2"; end
    #def enter_uart_mode(args); @block << "\xB3"; end
    def exit_uart_mode(args); @block << "\xB4"; end
    #def enter_learn_mode(args); @block << "\xB5"; end
    def exit_learn_mode(args); @block << "\xB6"; end
    #def enable_pk2go_mode(args); @block << "\xB7"; end
    #def logic_analyzer_go(args); @block << "\xB8"; end
    #def copy_ram_upload(args); @block << "\xB9"; end
    #def read_osccal(args); @block << "\x80"; end
    #def write_osccal(args); @block << "\x81"; end
    #def start_checksum(args); @block << "\x82"; end
    #def verify_checksum(args); @block << "\x83"; end
    #def check_device_id(args); @block << "\x84"; end
    def read_bandgap(args); @block << "\x85"; end
    def write_cfg_bandgap(args); @block << "\x86"; end
    #def change_chksm_frmt(args); @block << "\x87"; end
