    def vdd_on(args); etc; @block << "\xFF"; end
    def vdd_off(args); etc; @block << "\xFE"; end
    def vdd_gnd_on(args); etc; @block << "\xFD"; end
    def vdd_gnd_off(args); etc; @block << "\xFC"; end
    def vpp_on(args); etc; @block << "\xFB"; end
    def vpp_off(args); etc; @block << "\xFA"; end
    def vpp_pwm_on(args); etc; @block << "\xF9"; end
    def vpp_pwm_off(args); etc; @block << "\xF8"; end
    def mclr_gnd_on(args); etc; @block << "\xF7"; end
    def mclr_gnd_off(args); etc; @block << "\xF6"; end
    def busy_led_on(args); etc; @block << "\xF5"; end
    def busy_led_off(args); etc; @block << "\xF4"; end
    #def set_icsp_pins(args); etc(2); @block << "\xF3"; end
    #def write_byte_literal(args); etc(2); @block << "\xF2"; end
    def write_byte_buffer(args); etc; @block << "\xF1"; end
    def read_byte_buffer(args); etc; @block << "\xF0"; end
    def read_byte(args); etc; @block << "\xEF"; end
    #def write_bits_literal(args); etc(3); @block << "\xEE"; end
    #def write_bits_buffer(args); etc(2); @block << "\xED"; end
    #def read_bits_buffer(args); etc(2); @block << "\xEC"; end
    #def read_bits(args); etc(2); @block << "\xEB"; end
    #def set_icsp_speed(args); etc(2); @block << "\xEA"; end
    #def loop(args); etc(3); @block << "\xE9"; end
    #def delay_long(args); etc(2); @block << "\xE8"; end
    #def delay_short(args); etc(2); @block << "\xE7"; end
    #def if_eq_goto(args); etc(3); @block << "\xE6"; end
    #def if_gt_goto(args); etc(3); @block << "\xE5"; end
    #def goto_index(args); etc(2); @block << "\xE4"; end
    def exit_script(args); etc; @block << "\xe3"; end
    #def peek_sfr(args); etc(2); @block << "\xE2"; end
    #def poke_sfr(args); etc(3); @block << "\xE1"; end
    def icdslave_rx(args); etc; @block << "\xE0"; end
    #def icdslave_tx_lit(args); etc(2); @block << "\xDF"; end
    def icdslave_tx_buf(args); etc; @block << "\xDE"; end
    #def loopbuffer(args); etc(2); @block << "\xDD"; end
    def icsp_states_buffer(args); etc; @block << "\xDC"; end
    def pop_download(args); etc; @block << "\xDB"; end
    #def coreinst18(args); etc(3); @block << "\xDA"; end
    #def coreinst24(args); etc(4); @block << "\xD9"; end
    def nop24(args); etc; @block << "\xD8"; end
    def visi24(args); etc; @block << "\xD7"; end
    def rd2_byte_buffer(args); etc; @block << "\xD6"; end
    #def rd2_bits_buffer(args); etc(2); @block << "\xD5"; end
    #def write_bufword_w(args); etc(2); @block << "\xD4"; end
    #def write_bufbyte_w(args); etc(2); @block << "\xD3"; end
    #def const_write_dl(args); etc(2); @block << "\xD2"; end
    #def write_bits_lit_hld(args); etc(3); @block << "\xD1"; end
    #def write_bits_buf_hld(args); etc(2); @block << "\xD0"; end
    #def set_aux(args); etc(2); @block << "\xCF"; end
    def aux_state_buffer(args); etc; @block << "\xCE"; end
    def i2c_start(args); etc; @block << "\xCD"; end
    def i2c_stop(args); etc; @block << "\xCC"; end
    #def i2c_wr_byte_lit(args); etc(2); @block << "\xCB"; end
    def i2c_wr_byte_buf(args); etc; @block << "\xCA"; end
    def i2c_rd_byte_ack(args); etc; @block << "\xC9"; end
    def i2c_rd_byte_nack(args); etc; @block << "\xC8"; end
    #def spi_wr_byte_lit(args); etc(2); @block << "\xC7"; end
    def spi_wr_byte_buf(args); etc; @block << "\xC6"; end
    def spi_rd_byte_buf(args); etc; @block << "\xC5"; end
    #def spi_rdwr_byte_lit(args); etc(2); @block << "\xC4"; end
    def spi_rdwr_byte_buf(args); etc; @block << "\xC3"; end
    def icdslave_rx_bl(args); etc; @block << "\xC2"; end
    #def icdslave_tx_lit_bl(args); etc(2); @block << "\xC1"; end
    def icdslave_tx_buf_b(args); etc; @block << "\xC0"; end
    def measure_pulse(args); etc; @block << "\xBF"; end
    #def unio_tx(args); etc(3); @block << "\xBE"; end
    #def unio_tx_rx(args); etc(4); @block << "\xBD"; end
    #def jt2_setmode(args); etc(3); @block << "\xBC"; end
    #def jt2_sendcmd(args); etc(2); @block << "\xBB"; end
    #def jt2_xferdata8_lit(args); etc(2); @block << "\xBA"; end
    #def jt2_xferdata32_lit(args); etc(5); @block << "\xB9"; end
    #def jt2_xfrfastdat_lit(args); etc(5); @block << "\xB8"; end
    def jt2_xfrfastdat_buf(args); etc; @block << "\xB7"; end
    def jt2_xferinst_buf(args); etc; @block << "\xB6"; end
    def jt2_get_pe_resp(args); etc; @block << "\xB5"; end
    def jt2_wait_pe_resp(args); etc; @block << "\xB4"; end
    def jt2_pe_prog_resp(args); etc; @block << "\xB3"; end
